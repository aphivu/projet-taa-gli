{"ast":null,"code":"var _jsxFileName = \"/home/phi/Documents/M2 CCN/Cours/TAA/Projet/UI/frontend_react/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistore } from './redux/store/configureStore';\nimport LoginPageContainer from './redux/containers/LoginPageContainer'; //console.log(store.getState())\n\nconsole.log(\"index\");\nconsole.log(store.getState().user);\nReactDOM.render(React.createElement(Provider, {\n  store: store,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n}, React.createElement(PersistGate, {\n  loading: null,\n  persistor: persistore,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n}, React.createElement(Router, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21\n  },\n  __self: this\n}, React.createElement(Route, {\n  exact: true,\n  path: \"/\",\n  render: function render(props) {\n    return React.createElement(App, Object.assign({}, props, {\n      isAuthed: store.getState().user.authenticated,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }));\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22\n  },\n  __self: this\n}), React.createElement(Route, {\n  path: \"/login\",\n  component: LoginPageContainer,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27\n  },\n  __self: this\n}))))), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/home/phi/Documents/M2 CCN/Cours/TAA/Projet/UI/frontend_react/src/index.js"],"names":["React","ReactDOM","App","serviceWorker","Provider","BrowserRouter","Router","Route","PersistGate","store","persistore","LoginPageContainer","console","log","getState","user","render","props","authenticated","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,SAAQC,QAAR,QAAuB,aAAvB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,QAA8C,kBAA9C;AACA,SAASC,WAAT,QAA4B,iCAA5B;AAEA,SAASC,KAAT,EAAgBC,UAAhB,QAAkC,8BAAlC;AACA,OAAOC,kBAAP,MAA+B,uCAA/B,C,CAEA;;AAEAC,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAD,OAAO,CAACC,GAAR,CAAYJ,KAAK,CAACK,QAAN,GAAiBC,IAA7B;AACAd,QAAQ,CAACe,MAAT,CACI,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEP,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,WAAD;AAAa,EAAA,OAAO,EAAE,IAAtB;AAA4B,EAAA,SAAS,EAAEC,UAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,KAAD;AACI,EAAA,KAAK,MADT;AACU,EAAA,IAAI,EAAC,GADf;AAEI,EAAA,MAAM,EAAE,gBAACO,KAAD;AAAA,WACR,oBAAC,GAAD,oBAASA,KAAT;AAAgB,MAAA,QAAQ,EAAER,KAAK,CAACK,QAAN,GAAiBC,IAAjB,CAAsBG,aAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADQ;AAAA,GAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,EAMI,oBAAC,KAAD;AAAO,EAAA,IAAI,EAAC,QAAZ;AAAqB,EAAA,SAAS,EAAIP,kBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EANJ,CADJ,CADJ,CADJ,CADJ,EAeMQ,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAfN,E,CAkBA;AACA;AACA;;AACAjB,aAAa,CAACkB,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from 'react-redux';\nimport { BrowserRouter as Router, Route} from \"react-router-dom\";\nimport { PersistGate } from 'redux-persist/integration/react';\n\nimport { store, persistore } from './redux/store/configureStore'\nimport LoginPageContainer from './redux/containers/LoginPageContainer';\n\n//console.log(store.getState())\n\nconsole.log(\"index\")\nconsole.log(store.getState().user)\nReactDOM.render(\n    <Provider store={store}>\n        <PersistGate loading={null} persistor={persistore}>\n            <Router>\n                <div>\n                    <Route \n                        exact path='/' \n                        render={(props) => \n                        <App {...props} isAuthed={store.getState().user.authenticated} />} \n                    /> \n                    <Route path='/login' component = {LoginPageContainer}/>\n                </div>\n            </Router>\n        </PersistGate>\n    </Provider>\n    , document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}