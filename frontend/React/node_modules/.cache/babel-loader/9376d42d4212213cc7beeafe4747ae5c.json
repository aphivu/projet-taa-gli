{"ast":null,"code":"import { apiUrl } from '../../requests/utils';\nvar ACTIVITIES_REQUEST = 'ACTIVITIES_REQUEST';\nvar ACTIVITIES_SUCCESS = 'ACTIVITIES_SUCCESS';\nvar ACTIVITIES_FAILURE = 'ACTIVITIES_FAILURE';\nvar POST_ACTIVITY_REQUEST = 'POST_ACTIVITY_REQUEST';\nvar POST_ACTIVITY_SUCCESS = 'POST_ACTIVITY_SUCCESS';\nvar POST_ACTIVITY_FAILURE = 'POST_ACTIVITY_FAILURE';\nexport function activitiesRequest() {\n  return {\n    type: ACTIVITIES_REQUEST\n  };\n}\nexport function activitiesSuccess(activities) {\n  return {\n    type: ACTIVITIES_SUCCESS,\n    activities: activities\n  };\n}\nexport function activitiesFailure() {\n  return {\n    type: ACTIVITIES_FAILURE\n  };\n}\nexport function getActivities(username, password) {\n  console.log(\"Get Activities\");\n  return function (dispatch) {\n    dispatch(activitiesRequest());\n    var loginHeader = {\n      method: 'GET',\n      headers: {\n        'Authorization': 'Basic ' + btoa(username + ':' + password)\n      }\n    };\n    return fetch(apiUrl + '/user/activities', loginHeader).then(function (response) {\n      console.log(response.status);\n\n      if (response.ok) {\n        console.log('Response ok');\n        response.json().then(function (responseJson) {\n          dispatch(activitiesSuccess(responseJson));\n        });\n      } else {\n        dispatch(activitiesFailure());\n      }\n    }, function (error) {\n      console.log('An error occurred.', error);\n      dispatch(activitiesFailure());\n    });\n  };\n}\nexport function postActivityRequest() {\n  return {\n    type: POST_ACTIVITY_REQUEST\n  };\n}\nexport function postActivitySuccess() {\n  return {\n    type: POST_ACTIVITY_SUCCESS\n  };\n}\nexport function postActivityFailure() {\n  return {\n    type: POST_ACTIVITY_FAILURE\n  };\n}\nexport function postActivity(username, password, sport, localisation) {\n  console.log(\"Post\");\n  return function (dispatch) {\n    dispatch(postActivityRequest());\n    var loginHeader = {\n      method: 'POST',\n      headers: {\n        'Authorization': 'Basic ' + btoa(username + ':' + password),\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        sport: sport,\n        localisation: localisation\n      })\n    };\n    console.log(loginHeader.body);\n    return fetch(apiUrl + '/user/activities/add', loginHeader).then(function (response) {\n      console.log(response.status);\n\n      if (response.ok) {\n        dispatch(postActivitySuccess());\n      } else {\n        dispatch(postActivityFailure());\n      }\n    }, function (error) {\n      console.log('An error occurred.', error);\n      dispatch(postActivityFailure());\n    });\n  };\n}","map":{"version":3,"sources":["/home/phi/Documents/M2 CCN/Cours/TAA/Projet/UI/frontend_react/src/redux/actions/activitiesAction.js"],"names":["apiUrl","ACTIVITIES_REQUEST","ACTIVITIES_SUCCESS","ACTIVITIES_FAILURE","POST_ACTIVITY_REQUEST","POST_ACTIVITY_SUCCESS","POST_ACTIVITY_FAILURE","activitiesRequest","type","activitiesSuccess","activities","activitiesFailure","getActivities","username","password","console","log","dispatch","loginHeader","method","headers","btoa","fetch","then","response","status","ok","json","responseJson","error","postActivityRequest","postActivitySuccess","postActivityFailure","postActivity","sport","localisation","body","JSON","stringify"],"mappings":"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","sourcesContent":["import {apiUrl} from '../../requests/utils'\n\nconst ACTIVITIES_REQUEST = 'ACTIVITIES_REQUEST';\nconst ACTIVITIES_SUCCESS = 'ACTIVITIES_SUCCESS';\nconst ACTIVITIES_FAILURE = 'ACTIVITIES_FAILURE';\n\nconst POST_ACTIVITY_REQUEST = 'POST_ACTIVITY_REQUEST';\nconst POST_ACTIVITY_SUCCESS = 'POST_ACTIVITY_SUCCESS';\nconst POST_ACTIVITY_FAILURE = 'POST_ACTIVITY_FAILURE';\n\n\nexport function activitiesRequest(){\n    return {\n        type: ACTIVITIES_REQUEST\n    }\n}\n\nexport function activitiesSuccess(activities){\n    return {\n        type: ACTIVITIES_SUCCESS,\n        activities: activities\n    }\n}\n\nexport function activitiesFailure(){\n    return {\n        type: ACTIVITIES_FAILURE\n    }\n}\n\nexport function getActivities(username,password){\n    console.log(\"Get Activities\");\n\n    return function (dispatch){\n\n        dispatch(activitiesRequest());\n\n        const loginHeader = {\n            method: 'GET',\n            headers: {\n                'Authorization': 'Basic '+ btoa( username + ':' + password)\n              }\n        }\n\n        return fetch(apiUrl + '/user/activities',loginHeader)\n                .then((response) => {\n                    console.log(response.status)\n                    if (response.ok){\n                        console.log('Response ok');\n                        response.json()\n                        .then((responseJson) => {\n                            dispatch(activitiesSuccess(responseJson))\n                        });\n                    } else {\n                        dispatch(activitiesFailure())\n                    }        \n                },\n                    error => {\n                        console.log('An error occurred.', error);\n                        dispatch(activitiesFailure())\n                    }\n                )\n    }\n}\n\nexport function postActivityRequest(){\n    return {\n        type: POST_ACTIVITY_REQUEST\n    }\n}\n\nexport function postActivitySuccess(){\n    return {\n        type: POST_ACTIVITY_SUCCESS,\n    }\n}\n\nexport function postActivityFailure(){\n    return {\n        type: POST_ACTIVITY_FAILURE\n    }\n}\n\nexport function postActivity(username,password,sport,localisation){\n    console.log(\"Post\");\n\n    return function (dispatch){\n\n        dispatch(postActivityRequest());\n\n        const loginHeader = {\n            method: 'POST',\n            headers: {\n                'Authorization': 'Basic '+ btoa( username + ':' + password),\n                'Content-Type': 'application/json'\n              },\n            body: JSON.stringify({\n                sport: sport,\n                localisation: localisation,\n            })\n        }\n\n        console.log(loginHeader.body)\n\n        return fetch(apiUrl + '/user/activities/add',loginHeader)\n                .then((response) => {\n                    console.log(response.status)\n                    if (response.ok){\n                        dispatch(postActivitySuccess())\n                    } else {\n                        dispatch(postActivityFailure())\n                    }        \n                },\n                    error => {\n                        console.log('An error occurred.', error);\n                        dispatch(postActivityFailure())\n                    }\n                )\n    }\n}"]},"metadata":{},"sourceType":"module"}