{"ast":null,"code":"import { apiUrl } from '../../requests/utils';\nvar LOCALISATIONS_REQUEST = 'LOCALISATIONS_REQUEST';\nvar LOCALISATIONS_SUCCESS = 'LOCALISATIONS_SUCCESS';\nvar LOCALISATIONS_FAILURE = 'LOCALISATIONS_FAILURE';\nexport function localisationsRequest() {\n  return {\n    type: LOCALISATIONS_REQUEST\n  };\n}\nexport function localisationsSuccess(localisations) {\n  return {\n    type: LOCALISATIONS_SUCCESS,\n    sports: localisations\n  };\n}\nexport function localisationsFailure() {\n  return {\n    type: LOCALISATIONS_FAILURE\n  };\n}\nexport function getLocalisations(username, password) {\n  console.log(\"Get Localisations\");\n  return function (dispatch) {\n    dispatch(localisationsRequest());\n    var loginHeader = {\n      method: 'GET',\n      headers: {\n        'Authorization': 'Basic ' + btoa(username + ':' + password)\n      }\n    };\n    return fetch(apiUrl + '/user/localisations', loginHeader).then(function (response) {\n      console.log(response.status);\n\n      if (response.ok) {\n        console.log('Response ok');\n        response.json().then(function (responseJson) {\n          dispatch(localisationsSuccess(responseJson));\n        });\n      } else {\n        dispatch(localisationsFailure());\n      }\n    }, function (error) {\n      console.log('An error occurred.', error);\n      dispatch(localisationsFailure());\n    });\n  };\n}","map":{"version":3,"sources":["/home/phi/Documents/M2 CCN/Cours/TAA/Projet/UI/frontend_react/src/redux/actions/localisationAction.js"],"names":["apiUrl","LOCALISATIONS_REQUEST","LOCALISATIONS_SUCCESS","LOCALISATIONS_FAILURE","localisationsRequest","type","localisationsSuccess","localisations","sports","localisationsFailure","getLocalisations","username","password","console","log","dispatch","loginHeader","method","headers","btoa","fetch","then","response","status","ok","json","responseJson","error"],"mappings":"AAAA,SAAQA,MAAR,QAAqB,sBAArB;AAEA,IAAMC,qBAAqB,GAAG,uBAA9B;AACA,IAAMC,qBAAqB,GAAG,uBAA9B;AACA,IAAMC,qBAAqB,GAAG,uBAA9B;AAEA,OAAO,SAASC,oBAAT,GAA+B;AAClC,SAAO;AACHC,IAAAA,IAAI,EAAEJ;AADH,GAAP;AAGH;AAED,OAAO,SAASK,oBAAT,CAA8BC,aAA9B,EAA4C;AAC/C,SAAO;AACHF,IAAAA,IAAI,EAAEH,qBADH;AAEHM,IAAAA,MAAM,EAAED;AAFL,GAAP;AAIH;AAED,OAAO,SAASE,oBAAT,GAA+B;AAClC,SAAO;AACHJ,IAAAA,IAAI,EAAEF;AADH,GAAP;AAGH;AAED,OAAO,SAASO,gBAAT,CAA0BC,QAA1B,EAAmCC,QAAnC,EAA4C;AAC/CC,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AAEA,SAAO,UAAUC,QAAV,EAAmB;AAEtBA,IAAAA,QAAQ,CAACX,oBAAoB,EAArB,CAAR;AAEA,QAAMY,WAAW,GAAG;AAChBC,MAAAA,MAAM,EAAE,KADQ;AAEhBC,MAAAA,OAAO,EAAE;AACL,yBAAiB,WAAUC,IAAI,CAAER,QAAQ,GAAG,GAAX,GAAiBC,QAAnB;AAD1B;AAFO,KAApB;AAOA,WAAOQ,KAAK,CAACpB,MAAM,GAAG,qBAAV,EAAgCgB,WAAhC,CAAL,CACEK,IADF,CACO,UAACC,QAAD,EAAc;AAChBT,MAAAA,OAAO,CAACC,GAAR,CAAYQ,QAAQ,CAACC,MAArB;;AACA,UAAID,QAAQ,CAACE,EAAb,EAAgB;AACZX,QAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACAQ,QAAAA,QAAQ,CAACG,IAAT,GACCJ,IADD,CACM,UAACK,YAAD,EAAkB;AACpBX,UAAAA,QAAQ,CAACT,oBAAoB,CAACoB,YAAD,CAArB,CAAR;AACH,SAHD;AAIH,OAND,MAMO;AACHX,QAAAA,QAAQ,CAACN,oBAAoB,EAArB,CAAR;AACH;AACJ,KAZF,EAaK,UAAAkB,KAAK,EAAI;AACLd,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCa,KAAlC;AACAZ,MAAAA,QAAQ,CAACN,oBAAoB,EAArB,CAAR;AACH,KAhBN,CAAP;AAkBH,GA7BD;AA8BH","sourcesContent":["import {apiUrl} from '../../requests/utils'\n\nconst LOCALISATIONS_REQUEST = 'LOCALISATIONS_REQUEST';\nconst LOCALISATIONS_SUCCESS = 'LOCALISATIONS_SUCCESS';\nconst LOCALISATIONS_FAILURE = 'LOCALISATIONS_FAILURE';\n\nexport function localisationsRequest(){\n    return {\n        type: LOCALISATIONS_REQUEST\n    }\n}\n\nexport function localisationsSuccess(localisations){\n    return {\n        type: LOCALISATIONS_SUCCESS,\n        sports: localisations\n    }\n}\n\nexport function localisationsFailure(){\n    return {\n        type: LOCALISATIONS_FAILURE\n    }\n}\n\nexport function getLocalisations(username,password){\n    console.log(\"Get Localisations\");\n\n    return function (dispatch){\n\n        dispatch(localisationsRequest());\n\n        const loginHeader = {\n            method: 'GET',\n            headers: {\n                'Authorization': 'Basic '+ btoa( username + ':' + password)\n              }\n        }\n\n        return fetch(apiUrl + '/user/localisations',loginHeader)\n                .then((response) => {\n                    console.log(response.status)\n                    if (response.ok){\n                        console.log('Response ok');\n                        response.json()\n                        .then((responseJson) => {\n                            dispatch(localisationsSuccess(responseJson))\n                        });\n                    } else {\n                        dispatch(localisationsFailure())\n                    }        \n                },\n                    error => {\n                        console.log('An error occurred.', error);\n                        dispatch(localisationsFailure())\n                    }\n                )\n    }\n}"]},"metadata":{},"sourceType":"module"}